<error errorId="1791ef69-42ba-4b20-a65e-8c9f42634694" host="RGHML-WSVM-01" type="System.Exception" message="FAILED COMMAND &#xD;&#xA;Invalid object name 'dbo.EdmMetadata'.&#xD;&#xA;SELECT TOP (1) &#xD;&#xA;    [Extent1].[Id] AS [Id], &#xD;&#xA;    [Extent1].[ModelHash] AS [ModelHash]&#xD;&#xA;    FROM [dbo].[EdmMetadata] AS [Extent1]&#xD;&#xA;    ORDER BY [Extent1].[Id] DESC&#xD;&#xA;   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at Implanta.Common.Data.EntityFramework.Interception.SqlCustomInterceptor.Executed[T](DbCommand command, DbCommandInterceptionContext`1 interceptionContext)&#xD;&#xA;   at Implanta.Common.Data.EntityFramework.Interception.SqlCustomInterceptor.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1 interceptionContext)&#xD;&#xA;   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)&#xD;&#xA;   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)&#xD;&#xA;   at System.Data.Entity.Core.EntityClient.Internal.EntityCommandDefinition.ExecuteStoreCommands(EntityCommand entityCommand, CommandBehavior behavior)&#xD;&#xA;   at System.Data.Entity.Core.Objects.Internal.ObjectQueryExecutionPlan.Execute[TResultType](ObjectContext context, ObjectParameterCollection parameterValues)&#xD;&#xA;   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)&#xD;&#xA;   at System.Data.Entity.Core.Objects.ObjectQuery`1.&lt;&gt;c__DisplayClass7.&lt;GetResults&gt;b__5()&#xD;&#xA;   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)&#xD;&#xA;   at System.Data.Entity.Core.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)&#xD;&#xA;   at System.Data.Entity.Core.Objects.ObjectQuery`1.&lt;System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator&gt;b__0()&#xD;&#xA;   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()&#xD;&#xA;   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)&#xD;&#xA;   at System.Data.Entity.Internal.EdmMetadataRepository.QueryForModelHash(Func`2 createContext)&#xD;&#xA;   at System.Data.Entity.Internal.ModelCompatibilityChecker.CompatibleWithModel(InternalContext internalContext, ModelHashCalculator modelHashCalculator, Boolean throwIfNoMetadata, DatabaseExistenceState existenceState)&#xD;&#xA;   at System.Data.Entity.Internal.InternalContext.CompatibleWithModel(Boolean throwIfNoMetadata, DatabaseExistenceState existenceState)&#xD;&#xA;   at System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)&#xD;&#xA;   at System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)&#xD;&#xA;   at System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()&#xD;&#xA;   at System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)&#xD;&#xA;   at System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)&#xD;&#xA;   at System.Data.Entity.Internal.InternalContext.GetEntitySetAndBaseTypeForType(Type entityType)&#xD;&#xA;   at System.Data.Entity.Internal.Linq.InternalSet`1.Initialize()&#xD;&#xA;   at System.Data.Entity.Internal.Linq.InternalSet`1.get_InternalContext()&#xD;&#xA;   at System.Data.Entity.Internal.Linq.InternalSet`1.ActOnSet(Action action, EntityState newState, Object entity, String methodName)&#xD;&#xA;   at System.Data.Entity.Internal.Linq.InternalSet`1.Add(Object entity)&#xD;&#xA;   at System.Data.Entity.DbSet`1.Add(TEntity entity)&#xD;&#xA;   at Implanta.Common.Web.TaskScheduler.LogTaskWrite.Salvar(LogTaskType tipoLog, String log)&#xD;&#xA;   at Implanta.Siscont.TaskScheduler.Despesa.ArquivosCNABTask.ExecuteTask()&#xD;&#xA;   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)&#xD;&#xA;   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)&#xD;&#xA;   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;&#xA;   at Hangfire.Server.CoreBackgroundJobPerformer.InvokeMethod(PerformContext context, Object instance, Object[] arguments)&#xD;&#xA;   at Hangfire.Server.CoreBackgroundJobPerformer.Perform(PerformContext context)&#xD;&#xA;   at Hangfire.Server.BackgroundJobPerformer.&lt;&gt;c__DisplayClass8_0.&lt;PerformJobWithFilters&gt;b__0()&#xD;&#xA;   at Hangfire.Server.BackgroundJobPerformer.InvokePerformFilter(IServerFilter filter, PerformingContext preContext, Func`1 continuation)&#xD;&#xA;   at Hangfire.Server.BackgroundJobPerformer.PerformJobWithFilters(PerformContext context, IEnumerable`1 filters)&#xD;&#xA;   at Hangfire.Server.BackgroundJobPerformer.Perform(PerformContext context)&#xD;&#xA;   at Hangfire.Server.Worker.PerformJob(BackgroundProcessContext context, IStorageConnection connection, String jobId)&#xD;&#xA;   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)&#xD;&#xA;   at Hangfire.Server.AutomaticRetryProcess.Execute(BackgroundProcessContext context)&#xD;&#xA;   at Hangfire.Server.InfiniteLoopProcess.Execute(BackgroundProcessContext context)&#xD;&#xA;   at Hangfire.Server.ServerProcessExtensions.RunProcess(IServerProcess process, BackgroundProcessContext context)&#xD;&#xA;   at System.Threading.Tasks.Task.Execute()&#xD;&#xA;   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)&#xD;&#xA;   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)&#xD;&#xA;   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task&amp; currentTaskSlot)&#xD;&#xA;   at System.Threading.Tasks.Task.ExecuteEntry(Boolean bPreventDoubleExecution)&#xD;&#xA;   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)&#xD;&#xA;   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)&#xD;&#xA;   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)&#xD;&#xA;   at System.Threading.ThreadHelper.ThreadStart(Object obj)" detail="System.Exception: FAILED COMMAND &#xD;&#xA;Invalid object name 'dbo.EdmMetadata'.&#xD;&#xA;SELECT TOP (1) &#xD;&#xA;    [Extent1].[Id] AS [Id], &#xD;&#xA;    [Extent1].[ModelHash] AS [ModelHash]&#xD;&#xA;    FROM [dbo].[EdmMetadata] AS [Extent1]&#xD;&#xA;    ORDER BY [Extent1].[Id] DESC&#xD;&#xA;   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at Implanta.Common.Data.EntityFramework.Interception.SqlCustomInterceptor.Executed[T](DbCommand command, DbCommandInterceptionContext`1 interceptionContext)&#xD;&#xA;   at Implanta.Common.Data.EntityFramework.Interception.SqlCustomInterceptor.ReaderExecuted(DbCommand command, DbCommandInterceptionContext`1 interceptionContext)&#xD;&#xA;   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)&#xD;&#xA;   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)&#xD;&#xA;   at System.Data.Entity.Core.EntityClient.Internal.EntityCommandDefinition.ExecuteStoreCommands(EntityCommand entityCommand, CommandBehavior behavior)&#xD;&#xA;   at System.Data.Entity.Core.Objects.Internal.ObjectQueryExecutionPlan.Execute[TResultType](ObjectContext context, ObjectParameterCollection parameterValues)&#xD;&#xA;   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)&#xD;&#xA;   at System.Data.Entity.Core.Objects.ObjectQuery`1.&lt;&gt;c__DisplayClass7.&lt;GetResults&gt;b__5()&#xD;&#xA;   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)&#xD;&#xA;   at System.Data.Entity.Core.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)&#xD;&#xA;   at System.Data.Entity.Core.Objects.ObjectQuery`1.&lt;System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator&gt;b__0()&#xD;&#xA;   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()&#xD;&#xA;   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)&#xD;&#xA;   at System.Data.Entity.Internal.EdmMetadataRepository.QueryForModelHash(Func`2 createContext)&#xD;&#xA;   at System.Data.Entity.Internal.ModelCompatibilityChecker.CompatibleWithModel(InternalContext internalContext, ModelHashCalculator modelHashCalculator, Boolean throwIfNoMetadata, DatabaseExistenceState existenceState)&#xD;&#xA;   at System.Data.Entity.Internal.InternalContext.CompatibleWithModel(Boolean throwIfNoMetadata, DatabaseExistenceState existenceState)&#xD;&#xA;   at System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)&#xD;&#xA;   at System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)&#xD;&#xA;   at System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()&#xD;&#xA;   at System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)&#xD;&#xA;   at System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)&#xD;&#xA;   at System.Data.Entity.Internal.InternalContext.GetEntitySetAndBaseTypeForType(Type entityType)&#xD;&#xA;   at System.Data.Entity.Internal.Linq.InternalSet`1.Initialize()&#xD;&#xA;   at System.Data.Entity.Internal.Linq.InternalSet`1.get_InternalContext()&#xD;&#xA;   at System.Data.Entity.Internal.Linq.InternalSet`1.ActOnSet(Action action, EntityState newState, Object entity, String methodName)&#xD;&#xA;   at System.Data.Entity.Internal.Linq.InternalSet`1.Add(Object entity)&#xD;&#xA;   at System.Data.Entity.DbSet`1.Add(TEntity entity)&#xD;&#xA;   at Implanta.Common.Web.TaskScheduler.LogTaskWrite.Salvar(LogTaskType tipoLog, String log)&#xD;&#xA;   at Implanta.Siscont.TaskScheduler.Despesa.ArquivosCNABTask.ExecuteTask()&#xD;&#xA;   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)&#xD;&#xA;   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)&#xD;&#xA;   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;&#xA;   at Hangfire.Server.CoreBackgroundJobPerformer.InvokeMethod(PerformContext context, Object instance, Object[] arguments)&#xD;&#xA;   at Hangfire.Server.CoreBackgroundJobPerformer.Perform(PerformContext context)&#xD;&#xA;   at Hangfire.Server.BackgroundJobPerformer.&lt;&gt;c__DisplayClass8_0.&lt;PerformJobWithFilters&gt;b__0()&#xD;&#xA;   at Hangfire.Server.BackgroundJobPerformer.InvokePerformFilter(IServerFilter filter, PerformingContext preContext, Func`1 continuation)&#xD;&#xA;   at Hangfire.Server.BackgroundJobPerformer.PerformJobWithFilters(PerformContext context, IEnumerable`1 filters)&#xD;&#xA;   at Hangfire.Server.BackgroundJobPerformer.Perform(PerformContext context)&#xD;&#xA;   at Hangfire.Server.Worker.PerformJob(BackgroundProcessContext context, IStorageConnection connection, String jobId)&#xD;&#xA;   at Hangfire.Server.Worker.Execute(BackgroundProcessContext context)&#xD;&#xA;   at Hangfire.Server.AutomaticRetryProcess.Execute(BackgroundProcessContext context)&#xD;&#xA;   at Hangfire.Server.InfiniteLoopProcess.Execute(BackgroundProcessContext context)&#xD;&#xA;   at Hangfire.Server.ServerProcessExtensions.RunProcess(IServerProcess process, BackgroundProcessContext context)&#xD;&#xA;   at System.Threading.Tasks.Task.Execute()&#xD;&#xA;   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)&#xD;&#xA;   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)&#xD;&#xA;   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task&amp; currentTaskSlot)&#xD;&#xA;   at System.Threading.Tasks.Task.ExecuteEntry(Boolean bPreventDoubleExecution)&#xD;&#xA;   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)&#xD;&#xA;   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)&#xD;&#xA;   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)&#xD;&#xA;   at System.Threading.ThreadHelper.ThreadStart(Object obj)" time="2018-01-23T10:17:00.9925939Z" />